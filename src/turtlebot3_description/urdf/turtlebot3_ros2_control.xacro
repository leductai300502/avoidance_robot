<?xml version="1.0" encoding="UTF-8"?>
<robot name="turtlebot3_waffle" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Real robot ros2_control -->
    <xacro:unless value="$(arg sim_mode)">
        <!-- ESP32 serial hardware -->
        <ros2_control type="system" name="RealRobot">
            <hardware>
                <plugin>diffdrive_esp32/DiffDriveEsp32Hardware</plugin>
                <param name="left_wheel_name">wheel_left_joint</param>
                <param name="right_wheel_name">wheel_right_joint</param>
                <param name="device">/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.3:1.0-port0</param>
                <param name="baud_rate">57600</param>
                <param name="timeout_ms">1000</param>
                <param name="enc_counts_per_rev">4096</param>
            </hardware>
            <joint name="wheel_right_joint">
                <command_interface name="velocity">
                    <param name="min">-1</param>
                    <param name="max">1</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="wheel_left_joint">
                <command_interface name="velocity">
                    <param name="min">-1</param>
                    <param name="max">1</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
        </ros2_control>
    
        <!-- MPU6050 sensor not use in PC--> 
        <ros2_control name='MPU6050' type='sensor'>
            <hardware>
              <plugin>mpu6050/MPU6050Hardware</plugin>
                <param name='sensor_name'>mpu6050</param>
                <param name='frame_id'>imu_link</param>
            </hardware>
            <sensor name='mpu6050'>
              <state_interface name='orientation.x'/>
              <state_interface name='orientation.y'/>
              <state_interface name='orientation.z'/>
              <state_interface name='orientation.w'/>
              <state_interface name='angular_velocity.x'/>
              <state_interface name='angular_velocity.y'/>
              <state_interface name='angular_velocity.z'/>
              <state_interface name='linear_acceleration.x'/>
              <state_interface name='linear_acceleration.y'/>
              <state_interface name='linear_acceleration.z'/>  
            </sensor>
          </ros2_control>
    </xacro:unless>
    
    <!-- Gazebo ros2_control -->
    <xacro:if value="$(arg sim_mode)">
        <ros2_control type="system" name="GazeboSystem">
            <hardware>
                <plugin>gazebo_ros2_control/GazeboSystem</plugin>
            </hardware>
            <joint name="wheel_right_joint">
                <command_interface name="velocity">
                    <param name="min">-1</param>
                    <param name="max">1</param>
                </command_interface>
                <state_interface name="velocity"/>
                <state_interface name="position"/>  
            </joint>
            <joint name="wheel_left_joint">
                <command_interface name="velocity">
                    <param name="min">-1</param>
                    <param name="max">1</param>
                </command_interface>
                <state_interface name="velocity"/>
                <state_interface name="position"/>  
            </joint>
        </ros2_control>

        <gazebo>
            <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
                <robot_param>robot_description</robot_param>
                <robot_param_node>robot_state_publisher</robot_param_node>
                <parameters>$(find turtlebot3_controller)/config/diff_drive_controllers.yaml</parameters>
                <parameters>$(find turtlebot3_controller)/config/gazebo_ros2_ctl_use_sim.yaml</parameters>
            </plugin>
        </gazebo>
    </xacro:if>

</robot>